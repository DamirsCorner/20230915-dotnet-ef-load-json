// <auto-generated />
using EfCoreLoadFromJson;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfCoreLoadFromJson.Migrations
{
    [DbContext(typeof(AchievementsDbContext))]
    partial class AchievementsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EfCoreLoadFromJson.Achievement", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AchievementId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DlcId")
                        .HasColumnType("int");

                    b.Property<int>("Gamerscore")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AchievementId");

                    b.HasIndex("DlcId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("EfCoreLoadFromJson.Dlc", b =>
                {
                    b.Property<int>("DlcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DlcId"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DlcId");

                    b.HasIndex("GameId");

                    b.ToTable("Dlcs");
                });

            modelBuilder.Entity("EfCoreLoadFromJson.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"));

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("EfCoreLoadFromJson.Achievement", b =>
                {
                    b.HasOne("EfCoreLoadFromJson.Dlc", "Dlc")
                        .WithMany("Achievements")
                        .HasForeignKey("DlcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dlc");
                });

            modelBuilder.Entity("EfCoreLoadFromJson.Dlc", b =>
                {
                    b.HasOne("EfCoreLoadFromJson.Game", "Game")
                        .WithMany("Dlcs")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("EfCoreLoadFromJson.Dlc", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("EfCoreLoadFromJson.Game", b =>
                {
                    b.Navigation("Dlcs");
                });
#pragma warning restore 612, 618
        }
    }
}
